package com.orobator.android.gramophone.view;import android.app.NotificationManager;import android.app.PendingIntent;import android.app.TaskStackBuilder;import android.content.Context;import android.content.Intent;import android.graphics.Bitmap;import android.support.v4.app.NotificationCompat;import android.widget.RemoteViews;import com.orobator.android.gramophone.R;import com.orobator.android.gramophone.controller.services.MusicPlayerService;import com.orobator.android.gramophone.model.Song;import com.orobator.android.gramophone.model.SongQueue;import com.orobator.android.gramophone.view.activities.NowPlayingActivity;/** * Class used for accessing notification IDs */public class NotificationBuilder {    public static final int NOW_PLAYING = 0;    private NotificationBuilder() {    }    public static void createNotification(Context context, int notificationId, boolean isPlaying) {        Song song = SongQueue.getSong(SongQueue.getCurrentSongPosition());        Intent nowPlayingIntent = new Intent(context, NowPlayingActivity.class);        TaskStackBuilder stackBuilder = TaskStackBuilder.create(context);        // Adds the back stack        stackBuilder.addParentStack(NowPlayingActivity.class);        //Adds the intent to the top of the stack        stackBuilder.addNextIntent(nowPlayingIntent);        // Gets a PendingIntent containing the entire back stack        PendingIntent nowPlayingPendingIntent = stackBuilder.getPendingIntent(0, PendingIntent.FLAG_UPDATE_CURRENT);        RemoteViews remoteViews = new RemoteViews(context.getPackageName(), R.layout.notification_now_playing_small);        remoteViews.setCharSequence(R.id.title_TextView, "setText", song.getTitle());        remoteViews.setCharSequence(R.id.artist_TextView, "setText", song.getArtist());        Bitmap albumCover = song.getSmallArtwork(context);        remoteViews.setBitmap(R.id.albumArt_ImageView, "setImageBitmap", albumCover);        Intent togglePlaybackIntent = new Intent(context.getApplicationContext(), MusicPlayerService.class);        togglePlaybackIntent.setAction(MusicPlayerService.ACTION_TOGGLE_PLAYBACK);        PendingIntent togglePlaybackPendingIntent = PendingIntent.getService(context, 0, togglePlaybackIntent, PendingIntent.FLAG_UPDATE_CURRENT);        remoteViews.setOnClickPendingIntent(R.id.togglePlayback_imageView, togglePlaybackPendingIntent);        Intent stopPlaybackIntent = new Intent(context.getApplicationContext(), MusicPlayerService.class);        stopPlaybackIntent.setAction(MusicPlayerService.ACTION_STOP);        PendingIntent stopPlaybackPendingIntent = PendingIntent.getService(context, 0, stopPlaybackIntent, PendingIntent.FLAG_UPDATE_CURRENT);        remoteViews.setOnClickPendingIntent(R.id.closeNotification_imageView, stopPlaybackPendingIntent);        Intent nextSongIntent = new Intent(context.getApplicationContext(), MusicPlayerService.class);        nextSongIntent.setAction(MusicPlayerService.ACTION_NEXT);        PendingIntent nextSongPendingIntent = PendingIntent.getService(context.getApplicationContext(), 0, nextSongIntent, PendingIntent.FLAG_UPDATE_CURRENT);        remoteViews.setOnClickPendingIntent(R.id.nextSong_imageView, nextSongPendingIntent);        if (isPlaying) {            remoteViews.setInt(R.id.togglePlayback_imageView, "setImageResource", R.drawable.ic_action_pause);        } else {            remoteViews.setInt(R.id.togglePlayback_imageView, "setImageResource", R.drawable.ic_action_play_holo_dark);        }        NotificationCompat.Builder builder = new NotificationCompat.Builder(context)                .setSmallIcon(R.drawable.ic_launcher) // TODO: Should not be in color                .setContentIntent(nowPlayingPendingIntent)                .setLargeIcon(song.getSmallArtwork(context))                .setOngoing(true)                .setContent(remoteViews);        Song nextSong = SongQueue.getSong(SongQueue.getCurrentSongPosition() + 1);        if (nextSong != null) {            builder.setSubText("Up Next: " + nextSong.toString());        }        NotificationManager notificationManager = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);//        NotificationManagerCompat notificationManager = NotificationManagerCompat.from(context);        // Builds the notification and issues it.        notificationManager.notify(notificationId, builder.build());    }}